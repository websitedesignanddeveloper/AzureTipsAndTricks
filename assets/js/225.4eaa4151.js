(window.webpackJsonp=window.webpackJsonp||[]).push([[225],{500:function(e,t,o){"use strict";o.r(t);var i=o(43),n=Object(i.a)({},function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h4",{attrs:{id:"deploy-azure-functions-with-visual-studio-code"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#deploy-azure-functions-with-visual-studio-code","aria-hidden":"true"}},[e._v("#")]),e._v(" Deploy Azure Functions with Visual Studio Code")]),e._v(" "),o("p",[e._v("We previously looked at adding an Azure Function project to Visual Studio Code in this "),o("router-link",{attrs:{to:"./tip50.html"}},[e._v("post")]),e._v(" and then we looked at "),o("router-link",{attrs:{to:"./tip51.html"}},[e._v("debugging it locally")]),e._v(". In this post, we'll wrap up this mini-series by deploying Azure Functions to Azure directly.")],1),e._v(" "),o("p",[e._v("Select the Azure subscription that you'd like to use and select \"Create Function App in Azure.\" You'll need to select a name and then a resource group (or create a new one). Finally, you'll need a storage account which you can also create a new one or select an existing one. Once that is complete, the Azure Function has been created in Azure.")]),e._v(" "),o("img",{attrs:{src:e.$withBase("/files/azfuncdeploy.gif")}}),e._v(" "),o("p",[e._v("Now we'll push some code to the newly created Azure Function. Select your Azure Subscription and click deploy. You'll be asked to select the folder to deploy (which it creates a zip), then a subscription, the Function App. Press Yes when asked to overwrite and it will begin deploying.")]),e._v(" "),o("img",{attrs:{src:e.$withBase("/files/azfuncdeploy1.gif")}}),e._v(" "),o("p",[e._v("You can switch over to your browser to verify if you want.")]),e._v(" "),o("img",{attrs:{src:e.$withBase("/files/azfuncdeploy2.png")}})])},[],!1,null,null,null);t.default=n.exports}}]);